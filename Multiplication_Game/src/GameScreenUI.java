
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.Timer;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author MERTTUNAKURNAZ
 */
public class GameScreenUI extends javax.swing.JFrame {
    
    private final static String reportFileName = "reports.csv"; 
    
    private static User currentUser;
    private static Exercise exercise;
    
    private ExerciseManagement exerciseManagement;
    private ExerciseRecords exerciseRecords;
    
    private ArrayList<Question> questions;
    
    private Timer timer;
    private int seconds;
    private int prevSeconds;
    private int answeredCount;
    /**
     * Creates new form GameScreenUI
     */
    public GameScreenUI(User currentUser, Exercise exercise) {
        initComponents();
        
        this.currentUser = currentUser;
        this.exercise = exercise;
        
        this.exerciseManagement = new ExerciseManagement();
        
        gameModeLabel.setText("Mod: " + exercise.getGameMode());
        saveAnswerButton.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameScreenPanel = new javax.swing.JPanel();
        homeButton = new javax.swing.JButton();
        equationPanel = new javax.swing.JPanel();
        crossLabel = new javax.swing.JLabel();
        eqMarkLabel = new javax.swing.JLabel();
        answerTF = new javax.swing.JTextField();
        secondNumLabel = new javax.swing.JLabel();
        firstNumLabel = new javax.swing.JLabel();
        saveAnswerButton = new javax.swing.JButton();
        questionNumLabel = new javax.swing.JLabel();
        timerTextLabel = new javax.swing.JLabel();
        timerLabel = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        remainingQuestionLabel = new javax.swing.JLabel();
        gameModeLabel = new javax.swing.JLabel();
        highScoreButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(Toolkit.getDefaultToolkit().getScreenSize().width/5,Toolkit.getDefaultToolkit().getScreenSize().height/10);
        setPreferredSize(new java.awt.Dimension(800, 550));

        gameScreenPanel.setBackground(new java.awt.Color(5, 191, 219));
        gameScreenPanel.setPreferredSize(new java.awt.Dimension(800, 550));

        homeButton.setBackground(new java.awt.Color(0, 255, 202));
        homeButton.setFont(new java.awt.Font("Snap ITC", 0, 14)); // NOI18N
        homeButton.setForeground(new java.awt.Color(238, 238, 238));
        homeButton.setText("Ana Sayfa");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        equationPanel.setBackground(new java.awt.Color(151, 222, 255));
        equationPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(98, 205, 255), 8));

        crossLabel.setFont(new java.awt.Font("Snap ITC", 0, 48)); // NOI18N
        crossLabel.setForeground(new java.awt.Color(238, 238, 238));
        crossLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        crossLabel.setText("X");

        eqMarkLabel.setFont(new java.awt.Font("Snap ITC", 0, 48)); // NOI18N
        eqMarkLabel.setForeground(new java.awt.Color(238, 238, 238));
        eqMarkLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eqMarkLabel.setText("=");

        answerTF.setBackground(new java.awt.Color(170, 119, 255));
        answerTF.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        answerTF.setForeground(new java.awt.Color(238, 238, 238));
        answerTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        answerTF.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        answerTF.setPreferredSize(new java.awt.Dimension(70, 70));

        secondNumLabel.setBackground(new java.awt.Color(170, 119, 255));
        secondNumLabel.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        secondNumLabel.setForeground(new java.awt.Color(238, 238, 238));
        secondNumLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secondNumLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        secondNumLabel.setOpaque(true);

        firstNumLabel.setBackground(new java.awt.Color(170, 119, 255));
        firstNumLabel.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        firstNumLabel.setForeground(new java.awt.Color(238, 238, 238));
        firstNumLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstNumLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        firstNumLabel.setOpaque(true);

        javax.swing.GroupLayout equationPanelLayout = new javax.swing.GroupLayout(equationPanel);
        equationPanel.setLayout(equationPanelLayout);
        equationPanelLayout.setHorizontalGroup(
            equationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equationPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(firstNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(crossLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(secondNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eqMarkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(answerTF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        equationPanelLayout.setVerticalGroup(
            equationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equationPanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(equationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(crossLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eqMarkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(answerTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        saveAnswerButton.setBackground(new java.awt.Color(8, 131, 149));
        saveAnswerButton.setFont(new java.awt.Font("Snap ITC", 0, 18)); // NOI18N
        saveAnswerButton.setForeground(new java.awt.Color(238, 238, 238));
        saveAnswerButton.setText("Cevapla");
        saveAnswerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAnswerButtonActionPerformed(evt);
            }
        });

        questionNumLabel.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        questionNumLabel.setForeground(new java.awt.Color(238, 238, 238));
        questionNumLabel.setText("Kalan Soru:");

        timerTextLabel.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        timerTextLabel.setForeground(new java.awt.Color(238, 238, 238));
        timerTextLabel.setText("Süre:");

        timerLabel.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        timerLabel.setForeground(new java.awt.Color(238, 238, 238));
        timerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timerLabel.setText("00:00");

        startButton.setBackground(new java.awt.Color(8, 131, 149));
        startButton.setFont(new java.awt.Font("Snap ITC", 0, 30)); // NOI18N
        startButton.setForeground(new java.awt.Color(238, 238, 238));
        startButton.setText("Başla");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        remainingQuestionLabel.setFont(new java.awt.Font("Snap ITC", 0, 36)); // NOI18N
        remainingQuestionLabel.setForeground(new java.awt.Color(238, 238, 238));
        remainingQuestionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        remainingQuestionLabel.setText(" ");

        gameModeLabel.setFont(new java.awt.Font("Snap ITC", 0, 24)); // NOI18N
        gameModeLabel.setForeground(new java.awt.Color(238, 238, 238));
        gameModeLabel.setText("Mod: ");

        highScoreButton.setBackground(new java.awt.Color(8, 131, 149));
        highScoreButton.setFont(new java.awt.Font("Snap ITC", 0, 18)); // NOI18N
        highScoreButton.setForeground(new java.awt.Color(238, 238, 238));
        highScoreButton.setText("Yüksek Skor Tablosu");
        highScoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highScoreButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gameScreenPanelLayout = new javax.swing.GroupLayout(gameScreenPanel);
        gameScreenPanel.setLayout(gameScreenPanelLayout);
        gameScreenPanelLayout.setHorizontalGroup(
            gameScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameScreenPanelLayout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(gameScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(equationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameScreenPanelLayout.createSequentialGroup()
                        .addComponent(questionNumLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remainingQuestionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(timerTextLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameScreenPanelLayout.createSequentialGroup()
                        .addComponent(highScoreButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveAnswerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(gameScreenPanelLayout.createSequentialGroup()
                .addGroup(gameScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(gameScreenPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(gameModeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, gameScreenPanelLayout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(homeButton)
                .addContainerGap())
        );
        gameScreenPanelLayout.setVerticalGroup(
            gameScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gameScreenPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gameScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gameModeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(homeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(gameScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timerTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(remainingQuestionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(equationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(gameScreenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveAnswerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(highScoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gameScreenPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gameScreenPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        
        dispose();
        new ChildMainUI(currentUser).setVisible(true);
    }//GEN-LAST:event_homeButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        
        exerciseRecords = new ExerciseRecords(currentUser, exercise);
        questions = exerciseRecords.getQuestions();
        
        remainingQuestionLabel.setText(String.valueOf(exercise.getQuestionNum()));      //Kalan soru sayısına ilk atamayı yapma
        answeredCount = 0;
        
        timerLabel.setText("00:00");                                                    //Zaman göztergesine ilk atamayı yapma
        seconds = 0;
        
        //Birer birer sayacak olan zamanlayıcının ayarlanması
        timer = new Timer(1000,
            new ActionListener(){
                
                @Override
                public void actionPerformed(ActionEvent e) {
                    
                    seconds++;
                    int formatedMinutes = seconds / 60;
                    int formatedseconds = seconds % 60;
                    String timeStr = String.format("%02d:%02d", formatedMinutes, formatedseconds);
                    timerLabel.setText(String.valueOf(timeStr));
                }
            }
        );
        timer.start();
                                                         //Zaman formatını ayarlama
        exerciseRecords.setStartDate(LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss")));   
        
        startButton.setVisible(false);
        highScoreButton.setVisible(false);
        saveAnswerButton.setEnabled(true);
        
        firstNumLabel.setText(String.valueOf(questions.get(0).getNums()[0]));
        secondNumLabel.setText(String.valueOf(questions.get(0).getNums()[1]));
        
        answerTF.requestFocus();
        prevSeconds = 0;
    }//GEN-LAST:event_startButtonActionPerformed

    private void saveAnswerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAnswerButtonActionPerformed
        
        questions.get(answeredCount).setAnswerTime(seconds - prevSeconds);              //Her soruda harcanan sürenin hesaplanması
        prevSeconds = seconds;
        
        //Cevap doğrumu kontrolü
        if(questions.get(answeredCount).getNums()[2] == Integer.parseInt(answerTF.getText())){
            
            questions.get(answeredCount).setIsCorrect(true);
            exerciseRecords.incCorrectCount();
        }
        
        answeredCount++;
        answerTF.setText("");
        
        remainingQuestionLabel.setText(String.valueOf(exercise.getQuestionNum() - answeredCount));      //Kalan soru sayısının güncellenmesi
        
        
        if(answeredCount < questions.size()){                                                           //Egzersiz bitmediyse
            
            firstNumLabel.setText(String.valueOf(questions.get(answeredCount).getNums()[0]));
            secondNumLabel.setText(String.valueOf(questions.get(answeredCount).getNums()[1]));
            answerTF.requestFocus();
        }else{                                                                                          //Egzersiz bittiyse
            
            timer.stop();
            exerciseRecords.setComplateTime(seconds);

            startButton.setVisible(true);
            saveAnswerButton.setEnabled(false);
            answerTF.setText("");
            firstNumLabel.setText("");
            secondNumLabel.setText("");
            
            answeredCount = 0;
            
            //Skor oluşturma
            Score newScore = new Score(exercise.getQuestionNum(), exerciseRecords.getCorrectCount(), seconds);      
            
            //Yüksek skor ekleme
            exerciseManagement.addHighScore(currentUser, exercise.getExerciseID(), newScore.getTotalScore());    
            
            //Sayfadaki egzersizi güncelleme
            exercise = exerciseManagement.getExercise(exercise.getExerciseID());                                    
            
            exerciseRecords.setCorrectnessScore(newScore.getCorrectnessScore());
            exerciseRecords.setTimeScore(newScore.getTimeScore());
            
            //Rapor ekleme
            FileOperations.addReportToFile(exerciseRecords.createReport(), reportFileName);
            
            dispose();
            new ShowScoreUI(currentUser, exercise, newScore).setVisible(true);
        }
    }//GEN-LAST:event_saveAnswerButtonActionPerformed

    private void highScoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highScoreButtonActionPerformed
        
        dispose();
        new HighScoreUI(currentUser, exercise).setVisible(true);
    }//GEN-LAST:event_highScoreButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameScreenUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameScreenUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameScreenUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameScreenUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameScreenUI(currentUser, exercise).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField answerTF;
    private javax.swing.JLabel crossLabel;
    private javax.swing.JLabel eqMarkLabel;
    private javax.swing.JPanel equationPanel;
    private javax.swing.JLabel firstNumLabel;
    private javax.swing.JLabel gameModeLabel;
    private javax.swing.JPanel gameScreenPanel;
    private javax.swing.JButton highScoreButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel questionNumLabel;
    private javax.swing.JLabel remainingQuestionLabel;
    private javax.swing.JButton saveAnswerButton;
    private javax.swing.JLabel secondNumLabel;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel timerLabel;
    private javax.swing.JLabel timerTextLabel;
    // End of variables declaration//GEN-END:variables
}
